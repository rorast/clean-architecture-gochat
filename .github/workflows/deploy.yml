name: Deploy to GKE

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  PROJECT_ID: marine-embassy-455211-m1
  GKE_CLUSTER: gochat-cluster
  GKE_ZONE: asia-east1-a
  DEPLOYMENT_NAME: gochat

jobs:
  setup-build-deploy:
    name: Setup, Build, Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Configure Docker
      run: |
        gcloud auth configure-docker
        gcloud config set project ${{ env.PROJECT_ID }}

    - name: Build and Push Application Image
      run: |
        docker build -t gcr.io/marine-embassy-455211-m1/gochat:latest .
        docker push gcr.io/marine-embassy-455211-m1/gochat:latest

    - name: Build and Push Migration Image
      run: |
        docker build -t gcr.io/marine-embassy-455211-m1/gochat-migration:latest -f sql/Dockerfile .
        docker push gcr.io/marine-embassy-455211-m1/gochat-migration:latest

    - name: Get GKE Credentials
      run: |
        gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} --zone ${{ env.GKE_ZONE }}

    - name: Deploy Database Migration
      run: |
        # 更新 migration-job.yaml 中的映像標籤
        sed -i 's|gcr.io/.*/gochat-migration:.*|gcr.io/marine-embassy-455211-m1/gochat-migration:latest|' k8s/base/migration-job.yaml
        # 刪除舊的遷移任務（如果存在）
        kubectl delete job db-migration --ignore-not-found=true
        # 部署新的遷移任務
        kubectl apply -f k8s/base/migration-job.yaml
        # 等待遷移完成
        kubectl wait --for=condition=complete job/db-migration --timeout=300s

    - name: Deploy Application
      run: |
        # 更新 deployment.yaml 中的映像標籤
        sed -i 's|gcr.io/.*/gochat:.*|gcr.io/marine-embassy-455211-m1/gochat:latest|' k8s/base/deployment.yaml
        # 部署應用
        kubectl apply -f k8s/base/deployment.yaml
        # 等待部署完成
        kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }}

    - name: Verify Deployment
      run: |
        # 檢查 Pod 狀態
        kubectl get pods -l app=${{ env.DEPLOYMENT_NAME }}
        # 檢查服務狀態
        kubectl get svc ${{ env.DEPLOYMENT_NAME }} 